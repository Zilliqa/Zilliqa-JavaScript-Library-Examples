{"version":3,"file":"index.umd.js","sources":["../src/random.ts","../src/signature.ts","../src/schnorr.ts","../src/bech32.ts","../src/util.ts","../../../node_modules/tslib/tslib.es6.js","../src/keystore.ts","../src/index.ts"],"sourcesContent":["//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * randomBytes\n *\n * Uses JS-native CSPRNG to generate a specified number of bytes.\n * NOTE: this method throws if no PRNG is available.\n *\n * @param {number} bytes\n * @returns {string}\n */\nexport const randomBytes = (bytes: number) => {\n  let randBz: number[] | Uint8Array;\n\n  if (\n    typeof window !== 'undefined' &&\n    window.crypto &&\n    window.crypto.getRandomValues\n  ) {\n    randBz = window.crypto.getRandomValues(new Uint8Array(bytes));\n  } else if (typeof require !== 'undefined') {\n    const b = Buffer.allocUnsafe(bytes);\n    const sodium = require('sodium-native');\n    sodium.randombytes_buf(b);\n    randBz = new Uint8Array(\n      b.buffer,\n      b.byteOffset,\n      b.byteLength / Uint8Array.BYTES_PER_ELEMENT,\n    );\n  } else {\n    throw new Error('Unable to generate safe random numbers.');\n  }\n\n  let randStr = '';\n  for (let i = 0; i < bytes; i++) {\n    randStr += ('00' + randBz[i].toString(16)).slice(-2);\n  }\n\n  return randStr;\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { BN } from '@zilliqa-js/util';\n\n/**\n * Signature\n *\n * This replaces `elliptic/lib/elliptic/ec/signature`. This is to avoid\n * duplicate code in the final bundle, caused by having to bundle elliptic\n * twice due to its circular dependencies. This can be removed once\n * https://github.com/indutny/elliptic/pull/157 is resolved, or we find the\n * time to fork an optimised version of the library.\n */\ninterface SignatureOpt {\n  r: string | BN;\n  s: string | BN;\n}\n\nexport class Signature {\n  r: BN;\n  s: BN;\n\n  constructor(options: SignatureOpt) {\n    this.r = typeof options.r === 'string' ? new BN(options.r, 16) : options.r;\n    this.s = typeof options.s === 'string' ? new BN(options.s, 16) : options.s;\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport elliptic from 'elliptic';\nimport hashjs from 'hash.js';\nimport DRBG from 'hmac-drbg';\n\nimport { BN } from '@zilliqa-js/util';\n\nimport { randomBytes } from './random';\nimport { Signature } from './signature';\n\nconst secp256k1 = elliptic.ec('secp256k1');\nconst curve = secp256k1.curve;\nconst PRIVKEY_SIZE_BYTES = 32;\n// Public key is a point (x, y) on the curve.\n// Each coordinate requires 32 bytes.\n// In its compressed form it suffices to store the x co-ordinate\n// and the sign for y.\n// Hence a total of 33 bytes.\nconst PUBKEY_COMPRESSED_SIZE_BYTES = 33;\n// Personalization string used for HMAC-DRBG instantiation.\nconst ALG = Buffer.from('Schnorr+SHA256  ', 'ascii');\n// The length in bytes of the string above.\nconst ALG_LEN = 16;\n// The length in bytes of entropy inputs to HMAC-DRBG\nconst ENT_LEN = 32;\n\nconst HEX_ENC: 'hex' = 'hex';\n\n/**\n * generatePrivateKey\n *\n * @returns {string} - the hex-encoded private key\n */\nexport const generatePrivateKey = (): string => {\n  return secp256k1\n    .genKeyPair({\n      entropy: randomBytes(secp256k1.curve.n.byteLength()),\n      entropyEnc: HEX_ENC,\n      pers: 'zilliqajs+secp256k1+SHA256',\n    })\n    .getPrivate()\n    .toString(16, PRIVKEY_SIZE_BYTES * 2);\n};\n\n/**\n * Hash (r | M).\n * @param {Buffer} msg\n * @param {BN} r\n *\n * @returns {Buffer}\n */\n\nexport const hash = (q: BN, pubkey: Buffer, msg: Buffer) => {\n  const sha256 = hashjs.sha256();\n  const totalLength = PUBKEY_COMPRESSED_SIZE_BYTES * 2 + msg.byteLength; // 33 q + 33 pubkey + variable msgLen\n  const Q = q.toArrayLike(Buffer, 'be', 33);\n  const B = Buffer.allocUnsafe(totalLength);\n\n  Q.copy(B, 0);\n  pubkey.copy(B, 33);\n  msg.copy(B, 66);\n\n  return new BN(sha256.update(B).digest('hex'), 16);\n};\n\n/**\n * sign\n *\n * @param {Buffer} msg\n * @param {Buffer} key\n * @param {Buffer} pubkey\n *\n * @returns {Signature}\n */\nexport const sign = (\n  msg: Buffer,\n  privKey: Buffer,\n  pubKey: Buffer,\n): Signature => {\n  const prv = new BN(privKey);\n  const drbg = getDRBG(msg);\n  const len = curve.n.byteLength();\n\n  let sig;\n  while (!sig) {\n    const k = new BN(drbg.generate(len));\n    sig = trySign(msg, k, prv, pubKey);\n  }\n\n  return sig;\n};\n\n/**\n * trySign\n *\n * @param {Buffer} msg - the message to sign over\n * @param {BN} k - output of the HMAC-DRBG\n * @param {BN} privateKey - the private key\n * @param {Buffer} pubKey - the public key\n *\n * @returns {Signature | null =>}\n */\nexport const trySign = (\n  msg: Buffer,\n  k: BN,\n  privKey: BN,\n  pubKey: Buffer,\n): Signature | null => {\n  if (privKey.isZero()) {\n    throw new Error('Bad private key.');\n  }\n\n  if (privKey.gte(curve.n)) {\n    throw new Error('Bad private key.');\n  }\n\n  // 1a. check that k is not 0\n  if (k.isZero()) {\n    return null;\n  }\n  // 1b. check that k is < the order of the group\n  if (k.gte(curve.n)) {\n    return null;\n  }\n\n  // 2. Compute commitment Q = kG, where g is the base point\n  const Q = curve.g.mul(k);\n  // convert the commitment to octets first\n  const compressedQ = new BN(Q.encodeCompressed());\n\n  // 3. Compute the challenge r = H(Q || pubKey || msg)\n  // mod reduce the r value by the order of secp256k1, n\n  const r = hash(compressedQ, pubKey, msg).umod(curve.n);\n  const h = r.clone();\n\n  if (h.isZero()) {\n    return null;\n  }\n\n  // 4. Compute s = k - r * prv\n  // 4a. Compute r * prv\n  let s = h.imul(privKey).umod(curve.n);\n  // 4b. Compute s = k - r * prv mod n\n  s = k.isub(s).umod(curve.n);\n\n  if (s.isZero()) {\n    return null;\n  }\n\n  return new Signature({ r, s });\n};\n\n/**\n * Verify signature.\n *\n * @param {Buffer} msg\n * @param {Buffer} signature\n * @param {Buffer} key\n *\n * @returns {boolean}\n *\n * 1. Check if r,s is in [1, ..., order-1]\n * 2. Compute Q = sG + r*kpub\n * 3. If Q = O (the neutral point), return 0;\n * 4. r' = H(Q, kpub, m)\n * 5. return r' == r\n */\nexport const verify = (msg: Buffer, signature: Signature, key: Buffer) => {\n  const sig = new Signature(signature);\n\n  if (sig.s.isZero() || sig.r.isZero()) {\n    throw new Error('Invalid signature');\n  }\n\n  if (sig.s.isNeg() || sig.r.isNeg()) {\n    throw new Error('Invalid signature');\n  }\n\n  if (sig.s.gte(curve.n) || sig.r.gte(curve.n)) {\n    throw new Error('Invalid signature');\n  }\n\n  const kpub = curve.decodePoint(key);\n  if (!curve.validate(kpub)) {\n    throw new Error('Invalid public key');\n  }\n\n  const l = kpub.mul(sig.r);\n  const r = curve.g.mul(sig.s);\n\n  const Q = l.add(r);\n\n  if (Q.isInfinity()) {\n    throw new Error('Invalid intermediate point.');\n  }\n\n  const compressedQ = new BN(Q.encodeCompressed());\n\n  const r1 = hash(compressedQ, key, msg).umod(curve.n);\n\n  if (r1.isZero()) {\n    throw new Error('Invalid hash.');\n  }\n\n  return r1.eq(sig.r);\n};\n\nexport const toSignature = (serialised: string): Signature => {\n  const r = serialised.slice(0, 64);\n  const s = serialised.slice(64);\n\n  return new Signature({ r, s });\n};\n\n/**\n * Instantiate an HMAC-DRBG.\n *\n * @param {Buffer} msg - used as nonce\n *\n * @returns {DRBG}\n */\nconst getDRBG = (msg: Buffer) => {\n  const entropy = randomBytes(ENT_LEN);\n  const pers = Buffer.allocUnsafe(ALG_LEN + ENT_LEN);\n\n  Buffer.from(randomBytes(ENT_LEN)).copy(pers, 0);\n  ALG.copy(pers, ENT_LEN);\n\n  return new DRBG({\n    hash: hashjs.sha256,\n    entropy,\n    nonce: msg,\n    pers,\n  });\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { validation } from '@zilliqa-js/util';\n\nimport { toChecksumAddress } from './util';\n// This code is taken from https://github.com/sipa/bech32/tree/bdc264f84014c234e908d72026b7b780122be11f/ref/javascript\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nconst polymod = (values: Buffer): number => {\n  let chk = 1;\n  // tslint:disable-next-line\n  for (let p = 0; p < values.length; ++p) {\n    const top = chk >> 25;\n    chk = ((chk & 0x1ffffff) << 5) ^ values[p];\n    for (let i = 0; i < 5; ++i) {\n      if ((top >> i) & 1) {\n        chk ^= GENERATOR[i];\n      }\n    }\n  }\n  return chk;\n};\n\nconst hrpExpand = (hrp: string): Buffer => {\n  const ret = [];\n  let p;\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) >> 5);\n  }\n  ret.push(0);\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) & 31);\n  }\n  return Buffer.from(ret);\n};\n\nfunction verifyChecksum(hrp: string, data: Buffer) {\n  return polymod(Buffer.concat([hrpExpand(hrp), data])) === 1;\n}\n\nfunction createChecksum(hrp: string, data: Buffer) {\n  const values = Buffer.concat([\n    Buffer.from(hrpExpand(hrp)),\n    data,\n    Buffer.from([0, 0, 0, 0, 0, 0]),\n  ]);\n  // var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n  const mod = polymod(values) ^ 1;\n  const ret = [];\n  for (let p = 0; p < 6; ++p) {\n    ret.push((mod >> (5 * (5 - p))) & 31);\n  }\n  return Buffer.from(ret);\n}\n\nexport const encode = (hrp: string, data: Buffer) => {\n  const combined = Buffer.concat([data, createChecksum(hrp, data)]);\n  let ret = hrp + '1';\n  // tslint:disable-next-line\n  for (let p = 0; p < combined.length; ++p) {\n    ret += CHARSET.charAt(combined[p]);\n  }\n  return ret;\n};\n\nexport const decode = (bechString: string) => {\n  let p;\n  let hasLower = false;\n  let hasUpper = false;\n  for (p = 0; p < bechString.length; ++p) {\n    if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n      return null;\n    }\n    if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n      hasLower = true;\n    }\n    if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n      hasUpper = true;\n    }\n  }\n  if (hasLower && hasUpper) {\n    return null;\n  }\n  bechString = bechString.toLowerCase();\n  const pos = bechString.lastIndexOf('1');\n  if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n    return null;\n  }\n  const hrp = bechString.substring(0, pos);\n  const data = [];\n  for (p = pos + 1; p < bechString.length; ++p) {\n    const d = CHARSET.indexOf(bechString.charAt(p));\n    if (d === -1) {\n      return null;\n    }\n    data.push(d);\n  }\n\n  if (!verifyChecksum(hrp, Buffer.from(data))) {\n    return null;\n  }\n\n  return { hrp, data: Buffer.from(data.slice(0, data.length - 6)) };\n};\n\n// HRP is the human-readable part of zilliqa bech32 addresses\nexport const HRP = 'zil';\n\n/**\n * convertBits\n *\n * groups buffers of a certain width to buffers of the desired width.\n *\n * For example, converts byte buffers to buffers of maximum 5 bit numbers,\n * padding those numbers as necessary. Necessary for encoding Ethereum-style\n * addresses as bech32 ones.\n *\n * @param {Buffer} data\n * @param {number} fromWidth\n * @param {number} toWidth\n * @param {boolean} pad\n * @returns {Buffer|null}\n */\nexport const convertBits = (\n  data: Buffer,\n  fromWidth: number,\n  toWidth: number,\n  pad: boolean = true,\n) => {\n  let acc = 0;\n  let bits = 0;\n  const ret = [];\n  const maxv = (1 << toWidth) - 1;\n  // tslint:disable-next-line\n  for (let p = 0; p < data.length; ++p) {\n    const value = data[p];\n    if (value < 0 || value >> fromWidth !== 0) {\n      return null;\n    }\n    acc = (acc << fromWidth) | value;\n    bits += fromWidth;\n    while (bits >= toWidth) {\n      bits -= toWidth;\n      ret.push((acc >> bits) & maxv);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      ret.push((acc << (toWidth - bits)) & maxv);\n    }\n  } else if (bits >= fromWidth || (acc << (toWidth - bits)) & maxv) {\n    return null;\n  }\n\n  return Buffer.from(ret);\n};\n\n/**\n * toBech32Address\n *\n * Encodes a canonical 20-byte Ethereum-style address as a bech32 zilliqa\n * address.\n *\n * The expected format is zil1<address><checksum> where address and checksum\n * are the result of bech32 encoding a Buffer containing the address bytes.\n *\n * @param {string} 20 byte canonical address\n * @returns {string} 38 char bech32 encoded zilliqa address\n */\nexport const toBech32Address = (address: string): string => {\n  if (!validation.isAddress(address)) {\n    throw new Error('Invalid address format.');\n  }\n\n  const addrBz = convertBits(\n    Buffer.from(address.replace('0x', ''), 'hex'),\n    8,\n    5,\n  );\n\n  if (addrBz === null) {\n    throw new Error('Could not convert byte Buffer to 5-bit Buffer');\n  }\n\n  return encode(HRP, addrBz);\n};\n\n/**\n * fromBech32Address\n *\n * @param {string} address - a valid Zilliqa bech32 address\n * @returns {string} a canonical 20-byte Ethereum-style address\n */\nexport const fromBech32Address = (address: string): string => {\n  const res = decode(address);\n\n  if (res === null) {\n    throw new Error('Invalid bech32 address');\n  }\n\n  const { hrp, data } = res;\n\n  const shouldBe = HRP;\n  if (hrp !== shouldBe) {\n    throw new Error(`Expected hrp to be ${shouldBe} but got ${hrp}`);\n  }\n\n  const buf = convertBits(data, 5, 8, false);\n\n  if (buf === null) {\n    throw new Error('Could not convert buffer to bytes');\n  }\n\n  return toChecksumAddress(buf.toString('hex'));\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport elliptic from 'elliptic';\nimport hashjs from 'hash.js';\n\nimport { BN, validation } from '@zilliqa-js/util';\n\nimport { fromBech32Address, toBech32Address } from './bech32';\n\nconst secp256k1 = elliptic.ec('secp256k1');\n\n/**\n * getAddressFromPrivateKey\n *\n * takes a hex-encoded string (private key) and returns its corresponding\n * 20-byte hex-encoded address.\n *\n * @param {string} privateKey\n * @returns {string}\n */\nexport const getAddressFromPrivateKey = (privateKey: string): string => {\n  const normalizedPrviateKey = normalizePrivateKey(privateKey);\n  const keyPair = secp256k1.keyFromPrivate(normalizedPrviateKey, 'hex');\n  const pub = keyPair.getPublic(true, 'hex');\n\n  return toChecksumAddress(\n    hashjs\n      .sha256()\n      .update(pub, 'hex')\n      .digest('hex')\n      .slice(24),\n  );\n};\n\n/**\n * getPubKeyFromPrivateKey\n *\n * takes a hex-encoded string (private key) and returns its corresponding\n * hex-encoded 33-byte public key.\n *\n * @param {string} privateKey\n * @returns {string}\n */\nexport const getPubKeyFromPrivateKey = (privateKey: string) => {\n  const normalizedPrviateKey = normalizePrivateKey(privateKey);\n  const keyPair = secp256k1.keyFromPrivate(normalizedPrviateKey, 'hex');\n  return keyPair.getPublic(true, 'hex');\n};\n\n/**\n * getAccountFrom0xPrivateKey\n *\n * Utility method for recovering account from 0x private key.\n * See https://github.com/Zilliqa/Zilliqa-JavaScript-Library/pull/159\n * @param privateKeyWith0x : private key with 0x prefix\n */\n\nexport const getAccountFrom0xPrivateKey = (privateKeyWith0x: string) => {\n  const privateKeyWithout0x = normalizePrivateKey(privateKeyWith0x);\n  const keyPair = secp256k1.keyFromPrivate(privateKeyWith0x, 'hex');\n  const publicKeyWith0x = keyPair.getPublic(true, 'hex');\n  const addressWith0x = getAddressFromPublicKey(publicKeyWith0x);\n  const bech32With0x = toBech32Address(addressWith0x);\n  const with0x = {\n    prv: privateKeyWith0x,\n    pub: publicKeyWith0x,\n    addr: addressWith0x,\n    bech32: bech32With0x,\n  };\n\n  const keyPair2 = secp256k1.keyFromPrivate(privateKeyWithout0x, 'hex');\n  const publicKeyWithout0x = keyPair2.getPublic(true, 'hex');\n  const addressWithout0x = getAddressFromPublicKey(publicKeyWithout0x);\n  const bech32Without0x = toBech32Address(addressWithout0x);\n  const without0x = {\n    prv: privateKeyWithout0x,\n    pub: publicKeyWithout0x,\n    addr: addressWithout0x,\n    bech32: bech32Without0x,\n  };\n\n  const privateKeyAfterChange = keyPair.getPrivate('hex');\n  const publicKeyAfterChange = keyPair.getPublic(true, 'hex');\n  const addressAfterChange = getAddressFromPublicKey(publicKeyAfterChange);\n  const bech32AfterChange = toBech32Address(addressAfterChange);\n\n  const changed = {\n    prv: privateKeyAfterChange,\n    pub: publicKeyAfterChange,\n    addr: addressAfterChange,\n    bech32: bech32AfterChange,\n  };\n\n  return {\n    with0x,\n    without0x,\n    changed,\n  };\n};\n\n/**\n * compressPublicKey\n *\n * @param {string} publicKey - 65-byte public key, a point (x, y)\n *\n * @returns {string}\n */\nexport const compressPublicKey = (publicKey: string): string => {\n  return secp256k1.keyFromPublic(publicKey, 'hex').getPublic(true, 'hex');\n};\n\n/**\n * getAddressFromPublicKey\n *\n * takes hex-encoded string and returns the corresponding address\n *\n * @param {string} pubKey\n * @returns {string}\n */\nexport const getAddressFromPublicKey = (publicKey: string) => {\n  const normalized = publicKey.toLowerCase().replace('0x', '');\n  return toChecksumAddress(\n    hashjs\n      .sha256()\n      .update(normalized, 'hex')\n      .digest('hex')\n      .slice(24),\n  );\n};\n\n/**\n * toChecksumAddress\n *\n * takes hex-encoded string and returns the corresponding address\n *\n * @param {string} address\n * @returns {string}\n */\nexport const toChecksumAddress = (address: string): string => {\n  if (!validation.isAddress(address)) {\n    throw new Error(`${address} is not a valid base 16 address`);\n  }\n\n  address = address.toLowerCase().replace('0x', '');\n  const hash = hashjs\n    .sha256()\n    .update(address, 'hex')\n    .digest('hex');\n  const v = new BN(hash, 'hex', 'be');\n  let ret = '0x';\n\n  for (let i = 0; i < address.length; i++) {\n    if ('0123456789'.indexOf(address[i]) !== -1) {\n      ret += address[i];\n    } else {\n      ret += v.and(new BN(2).pow(new BN(255 - 6 * i))).gte(new BN(1))\n        ? address[i].toUpperCase()\n        : address[i].toLowerCase();\n    }\n  }\n\n  return ret;\n};\n\n/**\n * isValidChecksumAddress\n *\n * takes hex-encoded string and returns boolean if address is checksumed\n *\n * @param {string} address\n * @returns {boolean}\n */\nexport const isValidChecksumAddress = (address: string): boolean => {\n  return (\n    validation.isAddress(address.replace('0x', '')) &&\n    toChecksumAddress(address) === address\n  );\n};\n\n/**\n * normaliseAddress\n *\n * takes in a base16 address or a zilliqa bech32 encoded address\n * and returns a checksum base16 address. If the address is neither a base16\n * nor bech32 address, the code will return an error\n * @param {string)} address\n * @returns {string}\n */\nexport const normaliseAddress = (address: string): string => {\n  if (validation.isBech32(address)) {\n    return fromBech32Address(address);\n  }\n\n  if (!isValidChecksumAddress(address)) {\n    throw Error(\n      'Wrong address format, should be either bech32 or checksummed address',\n    );\n  }\n\n  return address;\n};\n\n/**\n * encodeBase58 - may be required for DID public key\n * undeprecating this function after version 2.0.0\n *\n * @param {string} hex - base 16 encoded string\n * @returns {string} - big endian base 58 encoded string\n */\nexport const encodeBase58 = (hex: string): string => {\n  const clean = hex.toLowerCase().replace('0x', '');\n  const tbl = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n  const base = new BN(58);\n  const zero = new BN(0);\n  let x = new BN(clean, 16);\n  let res = '';\n\n  while (x.gt(zero)) {\n    const rem = x.mod(base).toNumber(); // safe, always < 58\n    // big endian\n    res = tbl[rem] + res;\n    // quotient, remainders thrown away in integer division\n    x = x.div(base);\n  }\n\n  // convert to big endian in case the input hex is little endian\n  const hexBE = x.toString('hex', clean.length);\n  for (let i = 0; i < hexBE.length; i += 2) {\n    if (hex[i] === '0' && hex[i + 1] === '0') {\n      res = tbl[0] + res;\n    } else {\n      break;\n    }\n  }\n\n  return res;\n};\n\n/**\n * decodeBase58 - may be required for DID public key\n * undeprecating this function after version 2.0.0\n *\n * @param {string} raw - base 58 string\n * @returns {string} - big endian base 16 string\n */\nexport const decodeBase58 = (raw: string): string => {\n  const tbl = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n  const base = new BN(58);\n  const zero = new BN(0);\n  let isBreak = false;\n  let n = new BN(0);\n  let leader = '';\n\n  for (let i = 0; i < raw.length; i++) {\n    const char = raw.charAt(i);\n    const weight = new BN(tbl.indexOf(char));\n    n = n.mul(base).add(weight);\n\n    // check if padding required\n    if (!isBreak) {\n      if (i - 1 > 0 && raw[i - 1] !== '1') {\n        isBreak = true;\n        continue;\n      }\n      if (char === '1') {\n        leader += '00';\n      }\n    }\n  }\n  if (n.eq(zero)) {\n    return leader;\n  }\n\n  let res = leader + n.toString('hex');\n  if (res.length % 2 !== 0) {\n    res = '0' + res;\n  }\n\n  return res;\n};\n\n/**\n * verifyPrivateKey\n *\n * @param {string|Buffer} privateKey\n * @returns {boolean}\n */\nexport const verifyPrivateKey = (privateKey: string): boolean => {\n  const keyPair = secp256k1.keyFromPrivate(privateKey, 'hex');\n  const { result } = keyPair.validate();\n  return result;\n};\n\n/**\n * normalizePrivateKey : normalise private key from 0x or without 0x prefix\n *\n * @param {string} privateKey\n * @returns {string}\n */\n\nexport const normalizePrivateKey = (privateKey: string): string => {\n  try {\n    if (!validation.isPrivateKey(privateKey)) {\n      throw new Error('Private key is not correct');\n    }\n    const normalized = privateKey.toLowerCase().replace('0x', '');\n    if (!verifyPrivateKey(normalized)) {\n      throw new Error('Private key is not correct');\n    }\n    return normalized;\n  } catch (error) {\n    throw error;\n  }\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport aes from 'aes-js';\nimport hashjs from 'hash.js';\nimport { pbkdf2Sync } from 'pbkdf2';\nimport scrypt from 'scrypt-js';\nimport uuid from 'uuid';\n\nimport { bytes } from '@zilliqa-js/util';\n\nimport { randomBytes } from './random';\nimport {\n  KeystoreV3,\n  KDF,\n  KDFParams,\n  PBKDF2Params,\n  ScryptParams,\n} from './types';\nimport { getAddressFromPrivateKey } from './util';\n\nconst ALGO_IDENTIFIER = 'aes-128-ctr';\n\n/**\n * getDerivedKey\n *\n * NOTE: only scrypt and pbkdf2 are supported.\n *\n * @param {Buffer} key - the passphrase\n * @param {KDF} kdf - the key derivation function to be used\n * @param {KDFParams} params - params for the kdf\n *\n * @returns {Promise<Buffer>}\n */\nasync function getDerivedKey(\n  key: Buffer,\n  kdf: KDF,\n  params: KDFParams,\n): Promise<Buffer> {\n  const salt = Buffer.from(params.salt, 'hex');\n\n  if (kdf === 'pbkdf2') {\n    const { c, dklen } = params as PBKDF2Params;\n    return pbkdf2Sync(key, salt, c, dklen, 'sha256');\n  }\n\n  if (kdf === 'scrypt') {\n    const { n, r, p, dklen } = params as ScryptParams;\n    const derivedKeyInt8Array = scrypt.syncScrypt(key, salt, n, r, p, dklen);\n    return Buffer.from(derivedKeyInt8Array);\n  }\n\n  throw new Error('Only pbkdf2 and scrypt are supported');\n}\n\n/**\n * encryptPrivateKey\n *\n * Encodes and encrypts an account in the format specified by\n * https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition.\n * However, note that, in keeping with the hash function used by Zilliqa's\n * core protocol, the MAC is generated using sha256 instead of keccak.\n *\n * NOTE: only scrypt and pbkdf2 are supported.\n *\n * @param {KDF} kdf - the key derivation function to be used\n * @param {string} privateKey - hex-encoded private key\n * @param {string} passphrase - a passphrase used for encryption\n *\n * @returns {Promise<string>}\n */\nexport const encryptPrivateKey = async (\n  kdf: KDF,\n  privateKey: string,\n  passphrase: string,\n): Promise<string> => {\n  const address = getAddressFromPrivateKey(privateKey);\n  const salt = randomBytes(32);\n  const iv = Buffer.from(randomBytes(16), 'hex');\n  const kdfparams = {\n    salt,\n    n: 8192,\n    c: 262144,\n    r: 8,\n    p: 1,\n    dklen: 32,\n  };\n\n  const derivedKey = await getDerivedKey(\n    Buffer.from(passphrase),\n    kdf,\n    kdfparams,\n  );\n  const cipher = new aes.ModeOfOperation.ctr(\n    derivedKey.slice(0, 16),\n    new aes.Counter(iv),\n  );\n  const ciphertext = Buffer.from(\n    cipher.encrypt(Buffer.from(privateKey, 'hex')),\n  );\n\n  return JSON.stringify({\n    address,\n    crypto: {\n      cipher: ALGO_IDENTIFIER,\n      cipherparams: {\n        iv: iv.toString('hex'),\n      },\n      ciphertext: ciphertext.toString('hex'),\n      kdf,\n      kdfparams,\n      mac: hashjs\n        // @ts-ignore\n        .hmac(hashjs.sha256, derivedKey, 'hex')\n        .update(\n          Buffer.concat([\n            derivedKey.slice(16, 32),\n            ciphertext,\n            iv,\n            Buffer.from(ALGO_IDENTIFIER),\n          ]),\n          'hex',\n        )\n        .digest('hex'),\n    },\n    id: uuid.v4({ random: bytes.hexToIntArray(randomBytes(16)) }),\n    version: 3,\n  });\n};\n\n/**\n * decryptPrivateKey\n *\n * Recovers the private key from a keystore file using the given passphrase.\n *\n * @param {string} passphrase\n * @param {KeystoreV3} keystore\n * @returns {Promise<string>}\n */\nexport const decryptPrivateKey = async (\n  passphrase: string,\n  keystore: KeystoreV3,\n): Promise<string> => {\n  const ciphertext = Buffer.from(keystore.crypto.ciphertext, 'hex');\n  const iv = Buffer.from(keystore.crypto.cipherparams.iv, 'hex');\n  const kdfparams = keystore.crypto.kdfparams;\n\n  const derivedKey = await getDerivedKey(\n    Buffer.from(passphrase),\n    keystore.crypto.kdf,\n    kdfparams,\n  );\n\n  const mac = hashjs\n    // @ts-ignore\n    .hmac(hashjs.sha256, derivedKey, 'hex')\n    .update(\n      Buffer.concat([\n        derivedKey.slice(16, 32),\n        ciphertext,\n        iv,\n        Buffer.from(ALGO_IDENTIFIER),\n      ]),\n      'hex',\n    )\n    .digest('hex');\n\n  // we need to do a byte-by-byte comparison to avoid non-constant time side\n  // channel attacks.\n  if (!bytes.isEqual(mac.toUpperCase(), keystore.crypto.mac.toUpperCase())) {\n    return Promise.reject('Failed to decrypt.');\n  }\n\n  const cipher = new aes.ModeOfOperation.ctr(\n    derivedKey.slice(0, 16),\n    new aes.Counter(iv),\n  );\n\n  return Buffer.from(cipher.decrypt(ciphertext)).toString('hex');\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as schnorr from './schnorr';\n\n/**\n * sign\n *\n * @param {string} hash - hex-encoded hash of the data to be signed\n *\n * @returns {string} the signature\n */\nexport const sign = (\n  msg: Buffer,\n  privateKey: string,\n  pubKey: string,\n): string => {\n  const sig = schnorr.sign(\n    msg,\n    Buffer.from(privateKey, 'hex'),\n    Buffer.from(pubKey, 'hex'),\n  );\n\n  let r = sig.r.toString('hex');\n  let s = sig.s.toString('hex');\n  while (r.length < 64) {\n    r = '0' + r;\n  }\n  while (s.length < 64) {\n    s = '0' + s;\n  }\n\n  return r + s;\n};\n\nexport { schnorr };\nexport * from './util';\nexport * from './keystore';\nexport * from './random';\nexport * from './types';\nexport * from './signature';\nexport * from './bech32';\n"],"names":["BN","validation","secp256k1","pbkdf2Sync","bytes","sign","schnorr.sign"],"mappings":"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"}