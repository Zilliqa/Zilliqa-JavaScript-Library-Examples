(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@zilliqa-js/core'), require('@zilliqa-js/account'), require('@zilliqa-js/contract'), require('@zilliqa-js/blockchain'), require('@zilliqa-js/subscriptions'), require('@zilliqa-js/util'), require('@zilliqa-js/crypto')) :
  typeof define === 'function' && define.amd ? define(['exports', '@zilliqa-js/core', '@zilliqa-js/account', '@zilliqa-js/contract', '@zilliqa-js/blockchain', '@zilliqa-js/subscriptions', '@zilliqa-js/util', '@zilliqa-js/crypto'], factory) :
  (factory((global.zilliqa = {}),global['@zilliqa-js/core'],global['@zilliqa-js/account'],global['@zilliqa-js/contract'],global['@zilliqa-js/blockchain'],global['@zilliqa-js/subscriptions'],global['@zilliqa-js/util'],global['@zilliqa-js/crypto']));
}(this, (function (exports,core,account,contract,blockchain,subscriptions,util,crypto) { 'use strict';

  //  Copyright (C) 2018 Zilliqa
  var Zilliqa = /** @class */ (function () {
      function Zilliqa(node, provider) {
          this.provider = provider || new core.HTTPProvider(node);
          this.wallet = new account.Wallet(this.provider);
          this.blockchain = new blockchain.Blockchain(this.provider, this.wallet);
          this.network = new blockchain.Network(this.provider, this.wallet);
          this.contracts = new contract.Contracts(this.provider, this.wallet);
          this.transactions = new account.TransactionFactory(this.provider, this.wallet);
          this.subscriptionBuilder = new subscriptions.SubscriptionBuilder();
      }
      return Zilliqa;
  }());

  Object.keys(subscriptions).forEach(function (key) { exports[key] = subscriptions[key]; });
  Object.keys(util).forEach(function (key) { exports[key] = util[key]; });
  Object.keys(crypto).forEach(function (key) { exports[key] = crypto[key]; });
  exports.Zilliqa = Zilliqa;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=index.umd.js.map
